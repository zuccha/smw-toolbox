@top Program { line* }

@skip { Comment }

line {
  instruction (newline | eof) | space* newline
}

instruction { space* Opcode (space+ param)? space* }

@tokens {
  space { $[ \t]+ }
  newline { $[\n\r] }

  Comment { ";" ![\n]* }

  b { $[01] }
  d { $[0-9] }
  h { $[0-9A-Fa-f] }

  byteBin { "%" b b b b b b b b }
  byteDec { d | d d | d d d }
  byteHex { "$" h h }

  wordBin { "%" b b b b b b b b b b b b b b b b }
  wordDec { d d d d | d d d d d }
  wordHex { "$" h h h h }

  longBin { "%" b b b b b b b b b b b b b b b b b b b b b b b b }
  longDec { d d d d d d | d d d d d d d | d d d d d d d d }
  longHex { "$" h h h h h h }

  ImmediateByte { "#" (byteBin | byteHex | byteDec) }
  ImmediateWord { "#" (wordBin | wordHex | wordDec) }

  Byte { byteBin | byteHex | byteDec }
  Word { wordBin | wordHex | wordDec }
  Long { longBin | longHex | longDec }

  A { $[aA] }

  X { "," $[xX] }
  Y { "," $[yY] }
  S { "," $[sS] }

  "(" ")" "[" "]" ","

  eof { @eof }

  Opcode {
    "ADC" | "AND" | "ASL" | "BCC" | "BCS" | "BEQ" | "BIT" | "BMI" | "BNE" | "BPL"
  | "BRA" | "BRK" | "BRL" | "BVC" | "BVS" | "CLC" | "CLD" | "CLI" | "CLV" | "CMP"
  | "COP" | "CPX" | "CPY" | "DEC" | "DEX" | "DEY" | "EOR" | "INC" | "INX" | "INY"
  | "JMP" | "JML" | "JSR" | "LDA" | "LDX" | "LDY" | "LSR" | "MVN" | "MVP" | "NOP"
  | "ORA" | "PEA" | "PEI" | "PER" | "PHA" | "PHB" | "PHD" | "PHK" | "PHP" | "PHX"
  | "PHY" | "PLA" | "PLB" | "PLD" | "PLP" | "PLX" | "PLY" | "REP" | "ROL" | "ROR"
  | "RTI" | "RTL" | "RTS" | "SBC" | "SEC" | "SED" | "SEI" | "SEP" | "STA" | "STP"
  | "STX" | "STY" | "STZ" | "TAX" | "TAY" | "TCD" | "TCS" | "TDC" | "TRB" | "TSB"
  | "TSC" | "TSX" | "TXA" | "TXS" | "TXY" | "TYA" | "TYX" | "WAI" | "WDM" | "XBA"
  | "XCE"
  | "adc" | "and" | "asl" | "bcc" | "bcs" | "beq" | "bit" | "bmi" | "bne" | "bpl"
  | "bra" | "brk" | "brl" | "bvc" | "bvs" | "clc" | "cld" | "cli" | "clv" | "cmp"
  | "cop" | "cpx" | "cpy" | "dec" | "dex" | "dey" | "eor" | "inc" | "inx" | "iny"
  | "jmp" | "jml" | "jsr" | "lda" | "ldx" | "ldy" | "lsr" | "mvn" | "mvp" | "nop"
  | "ora" | "pea" | "pei" | "per" | "pha" | "phb" | "phd" | "phk" | "php" | "phx"
  | "phy" | "pla" | "plb" | "pld" | "plp" | "plx" | "ply" | "rep" | "rol" | "ror"
  | "rti" | "rtl" | "rts" | "sbc" | "sec" | "sed" | "sei" | "sep" | "sta" | "stp"
  | "stx" | "sty" | "stz" | "tax" | "tay" | "tcd" | "tcs" | "tdc" | "trb" | "tsb"
  | "tsc" | "tsx" | "txa" | "txs" | "txy" | "tya" | "tyx" | "wai" | "wdm" | "xba"
  | "xce"
  }
}

accumulator         { A }
immediate_Byte      { ImmediateByte }
immediate_Word      { ImmediateWord }
direct_Byte         { Byte }
direct_Byte_X       { Byte X }
direct_Byte_Y       { Byte Y }
direct_Byte_S       { Byte S }
direct_Word         { Word }
direct_Word_X       { Word X }
direct_Word_Y       { Word Y }
direct_Long         { Long }
direct_Long_X       { Long X }
indirect_Byte       { "(" Byte ")" }
indirect_Byte_X     { "(" Byte X ")" }
indirect_Byte_Y     { "(" Byte ")" Y }
indirect_Byte_SY    { "(" Byte S ")" Y }
indirect_Word       { "(" Word ")" }
indirect_Word_X     { "(" Word X ")" }
indirectLong_Byte   { "[" Byte "]" }
indirectLong_Byte_Y { "[" Byte "]" Y }
indirectLong_Word   { "[" Word "]" }
move                { Byte "," Byte }

param {
  accumulator | immediate_Byte | immediate_Word | direct_Byte
| direct_Word | direct_Long | direct_Byte_X | direct_Byte_Y
| direct_Byte_S | direct_Word_X | direct_Word_Y | direct_Long_X
| indirect_Byte | indirect_Byte_X | indirect_Byte_Y
| indirect_Byte_SY | indirect_Word | indirect_Word_X
| indirectLong_Byte | indirectLong_Byte_Y | indirectLong_Word
| move
}

@detectDelim
