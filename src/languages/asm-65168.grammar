@top Program { statement* }

@tokens {
  space { $[ \t]+ }
  newline { $[\n\r]+ }

  Comment { ";" ![\n]* }

  b { $[01] }
  d { $[0-9] }
  h { $[0-9A-Fa-f] }

  A { $[aA] }

  X { "," $[xX] }
  Y { "," $[yY] }
  S { "," $[sS] }

  "(" ")" "[" "]" ","
}

statement {
  space* Instruction (space+ parameter)? (space+ Comment)? space* newline
}

Instruction {
  "ADC" | "AND" | "ASL" | "BCC" | "BCS" | "BEQ" | "BIT" | "BMI" | "BNE" | "BPL"
| "BRA" | "BRK" | "BRL" | "BVC" | "BVS" | "CLC" | "CLD" | "CLI" | "CLV" | "CMP"
| "COP" | "CPX" | "CPY" | "DEC" | "DEX" | "DEY" | "EOR" | "INC" | "INX" | "INY"
| "JMP" | "JML" | "JSR" | "LDA" | "LDX" | "LDY" | "LSR" | "MVN" | "MVP" | "NOP"
| "ORA" | "PEA" | "PEI" | "PER" | "PHA" | "PHB" | "PHD" | "PHK" | "PHP" | "PHX"
| "PHY" | "PLA" | "PLB" | "PLD" | "PLP" | "PLX" | "PLY" | "REP" | "ROL" | "ROR"
| "RTI" | "RTL" | "RTS" | "SBC" | "SEC" | "SED" | "SEI" | "SEP" | "STA" | "STP"
| "STX" | "STY" | "STZ" | "TAX" | "TAY" | "TCD" | "TCS" | "TDC" | "TRB" | "TSB"
| "TSC" | "TSX" | "TXA" | "TXS" | "TXY" | "TYA" | "TYX" | "WAI" | "WDM" | "XBA"
| "XCE"
| "adc" | "and" | "asl" | "bcc" | "bcs" | "beq" | "bit" | "bmi" | "bne" | "bpl"
| "bra" | "brk" | "brl" | "bvc" | "bvs" | "clc" | "cld" | "cli" | "clv" | "cmp"
| "cop" | "cpx" | "cpy" | "dec" | "dex" | "dey" | "eor" | "inc" | "inx" | "iny"
| "jmp" | "jml" | "jsr" | "lda" | "ldx" | "ldy" | "lsr" | "mvn" | "mvp" | "nop"
| "ora" | "pea" | "pei" | "per" | "pha" | "phb" | "phd" | "phk" | "php" | "phx"
| "phy" | "pla" | "plb" | "pld" | "plp" | "plx" | "ply" | "rep" | "rol" | "ror"
| "rti" | "rtl" | "rts" | "sbc" | "sec" | "sed" | "sei" | "sep" | "sta" | "stp"
| "stx" | "sty" | "stz" | "tax" | "tay" | "tcd" | "tcs" | "tdc" | "trb" | "tsb"
| "tsc" | "tsx" | "txa" | "txs" | "txy" | "tya" | "tyx" | "wai" | "wdm" | "xba"
| "xce"
}

parameter {
  parameterAccumulator
| parameterImmediateByte
| parameterImmediateWord
| parameterDirectByte
| parameterDirectWord
| parameterDirectLong
| parameterDirectByteX
| parameterDirectByteS
| parameterDirectWordX
| parameterDirectWordY
| parameterDirectLongX
| parameterIndirectByte
| parameterIndirectByteX
| parameterIndirectByteY
| parameterIndirectByteSY
| parameterIndirectLongByte
| parameterIndirectLongByteY
| parameterMove
}

parameterAccumulator       { A }
parameterImmediateByte     { ImmediateByte }
parameterImmediateWord     { ImmediateWord }
parameterDirectByte        { Byte }
parameterDirectWord        { Word }
parameterDirectLong        { Long }
parameterDirectByteX       { Byte X }
parameterDirectByteS       { Byte S }
parameterDirectWordX       { Word X }
parameterDirectWordY       { Word Y }
parameterDirectLongX       { Long X }
parameterIndirectByte      { "(" Byte ")" }
parameterIndirectByteX     { "(" Byte X ")" }
parameterIndirectByteY     { "(" Byte ")" Y }
parameterIndirectByteSY    { "(" Byte S ")" Y }
parameterIndirectLongByte  { "[" Byte "]" }
parameterIndirectLongByteY { "[" Byte "]" Y }
parameterMove              { Byte "," Byte }


Byte { byteBin | byteHex | byteDec ~statement }
ImmediateByte { "#" byteBin | "#" byteHex | "#" byteDec ~statement }
byteBin { "%" b b b b b b b b }
byteHex { "$" h h }
byteDec { d | d d | d d d }

Word { wordBin | wordHex | wordDec ~statement }
ImmediateWord { "#" wordBin | "#" wordHex | "#" wordDec ~statement }
wordBin { "%" b b b b b b b b b b b b b b b b }
wordHex { "$" h h h h }
wordDec { d | d d | d d d | d d d d | d d d d d }

Long { longBin | longHex | longDec ~statement }
longBin { "%" b b b b b b b b b b b b b b b b b b b b b b b b }
longHex { "$" h h h h h h }
longDec { d | d d | d d d | d d d d | d d d d d | d d d d d d | d d d d d d d | d d d d d d d d }
